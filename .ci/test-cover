#!/usr/bin/env bash

set -e

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[38;5;220m'
NC='\033[0m' # No Color

_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
_BASE_DIR=$(dirname $_DIR)
_FORMAT=$1

function log {
  if [[ $1 = "FAIL" ]]; then
    printf "$RED[FAIL]$NC $2\n"
  elif [[ $1 = "WARN" && -z "$SILENT" ]]; then
    printf "$YELLOW[WARN]$NC $2\n"
  elif [[ $1 = "INFO" && -z "$SILENT" ]]; then
    printf "[INFO] $2\n"
  elif [[ $1 = "PASS" && -z "$SILENT" ]]; then
    printf "$GREEN[PASS]$NC $2\n"
  fi
}

cd $_BASE_DIR

if [[ "${_FORMAT}" == "xml" ]]; then
  echo "******* Go coveralls report xml... *************" && \
  gocov test $(go list ./... | grep -v /vendor/) | gocov-xml > coverage.xml
elif [[ "${_FORMAT}" == "html" ]]; then
  echo "******* Go coveralls report html... *************" && \
  gocov test $(go list ./... | grep -v /vendor/) | gocov-html > coverage.html
elif [[ "${_FORMAT}" == "coveralls" ]]; then
  # INFO: Go, multiple packages and coveralls.io
  # SOURCE: https://gist.github.com/rjeczalik/6f01430e8554bf59b88e
  echo "******* Go coveralls report coverprofile... *************" && \
  go list -f '{{if len .TestGoFiles}}"go test -coverprofile={{.Dir}}/.coverprofile {{.ImportPath}}"{{end}}' $(go list ./... | grep -v /vendor/ | grep -v mocks ) | xargs -L 1 sh -c;
  gover;
  goveralls -coverprofile=.coverprofile -service=travis-ci
else
    echo ""
fi
